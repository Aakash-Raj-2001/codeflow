{"version":3,"sources":["component/home/image 2.jpg","component/home/back.svg","serviceWorker.js","component/home/home.js","component/we-do/we-do.js","component/our-events/events.js","component/contact us/contact.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Home","className","src","svg","alt","image2","React","Component","Wedo","Events","Contact","Homepage","Work","Event","contacts","App","path","exact","strict","render","to","activeStyle","color","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,kQCYvBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,uECyBSC,E,iLA9BP,OACI,yBAAKC,UAAU,QAC3B,yBAAKA,UAAU,YAEf,yBAAKC,IAAKC,IAAKC,IAAI,YAKjB,yBAAKH,UAAU,cACG,yBAAKA,UAAU,SACX,yBAAKC,IAAKG,IAAQD,IAAI,SAC1B,yBAAKH,UAAU,SACX,4EACkD,6BADlD,4CACgG,6BADhG,oCAGC,yBAAKA,UAAU,kB,GAnBrBK,IAAMC,WCEVC,G,uLANP,OACI,yBAAKP,UAAU,SAAf,yC,GAJOK,IAAMC,YCSVE,G,uLANP,OACI,yBAAKR,UAAU,SAAf,qB,GAJSK,IAAMC,YCSZG,G,uLANP,OACI,yBAAKT,UAAU,SAAf,8B,GAJUK,IAAMC,YCStBI,EAAS,WAAK,OAAQ,6BAAK,kBAAC,EAAD,QAC3BC,EAAK,WAAK,OAAQ,4BAAI,kBAAC,EAAD,QACtBC,EAAM,WAAK,OAAQ,4BAAI,kBAAC,EAAD,QACvBC,EAAS,WAAK,OAAQ,4BAAI,kBAAC,EAAD,QAI1BC,E,iLAEJ,OAEE,kBAAC,IAAD,KACJ,yBAAKd,UAAU,OAEf,kBAAC,IAAD,CAAOe,KAAK,iBAAiBC,OAAK,EAACC,QAAM,EAACC,OAAQR,IAClD,kBAAC,IAAD,CAAOK,KAAK,SAASC,OAAK,EAACC,QAAM,EAACC,OAAQP,IAC1C,kBAAC,IAAD,CAAOI,KAAK,SAASC,OAAK,EAACC,QAAM,EAACC,OAAQN,IAC1C,kBAAC,IAAD,CAAOG,KAAK,WAAWC,OAAK,EAACC,QAAM,EAACC,OAAQL,IAC5C,yBAAKb,UAAU,UACd,kBAAC,IAAD,CAAUA,UAAU,WAAWmB,GAAG,iBAAkBH,OAAK,EAACI,YAAa,CAACC,MAAM,WAA9E,QACD,kBAAC,IAAD,CAASrB,UAAU,WAAYmB,GAAG,SAASH,OAAK,EAACI,YAAa,CAACC,MAAM,WAArE,SACC,kBAAC,IAAD,CAASrB,UAAU,WAAYmB,GAAG,SAASH,OAAK,EAACI,YAAa,CAACC,MAAM,WAArE,UACD,kBAAC,IAAD,CAASrB,UAAU,WAAYmB,GAAG,WAAWH,OAAK,EAACI,YAAa,CAACC,MAAM,WAAvE,eAGK,yBAAKrB,UAAU,QACf,yBAAKA,UAAU,aAAf,mBACkB,6BAChB,yBAAKC,IAAI,6DAA6DE,IAAI,OAC1E,yBAAKF,IAAI,yDAAyDE,IAAI,OACtE,yBAAKF,IAAI,8DAA8DE,IAAI,e,GAvBhEE,IAAMC,WA+BTQ,YAMfQ,IAASJ,OAAO,kBAAC,EAAD,MAASK,SAASC,eAAe,SL2E3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.f48a4735.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/image 2.52063952.jpg\";","module.exports = __webpack_public_path__ + \"static/media/back.f89d632a.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport './home.css';\r\n//import image1 from './image 1.png';\r\nimport image2 from './image 2.jpg';\r\n//import image3 from './image 3.jpg';\r\n//import image4 from './image 4.jpg';\r\n//import image5 from './image 5.jpg';\r\n//import image6 from './image 6.jpeg';\r\nimport svg  from './back.svg';\r\n\r\nclass Home extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"home\">\r\n<div className=\"svg-part\"> \r\n\r\n<img src={svg} alt=\"my svg\"  />\r\n\r\n\r\n\r\n</div>\r\n  <div className=\"container3\">\r\n                    <div className=\"box11\">\r\n                        <img src={image2} alt=\"run\"/></div>\r\n                    <div className=\"box22\">\r\n                        <p>\r\n                            Shiksha functions under the able guidance of -<br/>Dr. Neeraj Kaushik (Prof-In-Charge,SCSA) <br/>Dr. P. C. Tewari (Advisor, SCSA)\r\n                            </p>\r\n                         <div className=\"circle\"></div>   \r\n                    </div>\r\n             \r\n            </div>\r\n            \r\n            </div>\r\n    \r\n    \r\n    \r\n        \r\n        );\r\n    }\r\n}\r\n\r\nexport default Home","import React from 'react';\r\nimport './we-do.css';\r\n\r\nclass Wedo extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"we-do\"> this what we do wala component  </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Wedo","import React from 'react';\r\nimport './events.css';\r\n\r\nclass Events extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"we-do\"> our events  </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Events","import React from 'react';\r\nimport './contact.css';\r\n\r\nclass Contact extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"we-do\">contact me component  </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router,NavLink} from 'react-router-dom';\nimport Route from 'react-router-dom/Route';\nimport Home from './component/home/home';\nimport Wedo from './component/we-do/we-do';\nimport Events from \"./component/our-events/events\";\nimport Contact from './component/contact us/contact';\n\n\nconst Homepage=()=>{return( <div><Home/></div>);}\nconst Work=()=>{return( <h1><Wedo/></h1>);}\nconst Event=()=>{return( <h1><Events/></h1>);}\nconst contacts=()=>{return( <h1><Contact/></h1>);}\n\n\n\nclass App extends React.Component {\n  render(){\n  return (\n\n    <Router>\n<div className=\"App\"> \n\n<Route path=\"/shiksha-work/\" exact strict render={Homepage}/>\n<Route path=\"/about\" exact strict render={Work}/>\n<Route path=\"/event\" exact strict render={Event}/>  \n<Route path=\"/contact\" exact strict render={contacts}/>  \n<div className=\"navbar\">\n <NavLink  className=\"nav-item\" to=\"/shiksha-work/\"  exact activeStyle={{color:'orange'}}>Home</NavLink>\n<NavLink className=\"nav-item\"  to=\"/about\" exact activeStyle={{color:'orange'}}>About</NavLink>\n <NavLink className=\"nav-item\"  to=\"/event\" exact activeStyle={{color:'orange'}}>Events</NavLink>\n<NavLink className=\"nav-item\"  to=\"/contact\" exact activeStyle={{color:'orange'}}>Contact US</NavLink></div>\n\n   \n     <div className=\"foot\">\n     <div className=\"container\">\n       Copyright @ 2019<br/>\n       <img src=\"https://img.icons8.com/material/24/000000/facebook--v1.png\" alt=\"hi\"></img>\n       <img src=\"https://img.icons8.com/material/24/000000/snapchat.png\" alt=\"hi\"></img>\n       <img src=\"https://img.icons8.com/material/24/000000/pinterest--v1.png\" alt=\"hi\"></img>\n     </div>\n    </div></div>\n    </Router>\n  \n  );}\n}\n\nexport default App;\n\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();"],"sourceRoot":""}