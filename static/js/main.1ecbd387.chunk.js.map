{"version":3,"sources":["component/home/Tiny cute children learning coding.png","component/home/ex-header-background.jpg","component/home/logo.png","serviceWorker.js","component/home/home.js","component/we-do/we-do.js","component/our-events/events.js","component/contact us/contact.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Home","className","src","logo","alt","svg","image2","React","Component","Wedo","Events","Contact","Homepage","Work","Event","contacts","App","path","exact","strict","render","to","activeStyle","color","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,gE,mBCA3CD,EAAOC,QAAU,IAA0B,kD,mBCA3CD,EAAOC,QAAU,IAA0B,kC,kQCYvBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,wFCyBSC,E,iLAlCP,OACI,yBAAKC,UAAU,QACX,yBAAKA,UAAU,QACX,yBAAKC,IAAKC,IAAMC,IAAI,YACxC,yBAAKH,UAAU,YAEf,yBAAKC,IAAKG,IAAKD,IAAI,YAKnB,yBAAKH,UAAU,gBACb,yBAAKA,UAAU,cACG,yBAAKA,UAAU,SACX,yBAAKC,IAAKI,IAAQF,IAAI,SAC1B,yBAAKH,UAAU,SACX,0CAEG,6BAFH,uBAIC,yBAAKA,UAAU,kB,GAvBrBM,IAAMC,WCMVC,G,uLANP,OACI,yBAAKR,UAAU,SAAf,qC,GAJOM,IAAMC,YCSVE,G,uLANP,OACI,yBAAKT,UAAU,SAAf,8B,GAJSM,IAAMC,YCSZG,G,uLANP,OACI,yBAAKV,UAAU,SAAf,8B,GAJUM,IAAMC,YCStBI,EAAS,WAAK,OAAQ,6BAAK,kBAAC,EAAD,QAC3BC,EAAK,WAAK,OAAQ,4BAAI,kBAAC,EAAD,QACtBC,EAAM,WAAK,OAAQ,4BAAI,kBAAC,EAAD,QACvBC,EAAS,WAAK,OAAQ,4BAAI,kBAAC,EAAD,QAI1BC,E,iLAEJ,OAEE,kBAAC,IAAD,KACJ,yBAAKf,UAAU,OAEf,kBAAC,IAAD,CAAOgB,KAAK,iBAAiBC,OAAK,EAACC,QAAM,EAACC,OAAQR,IAClD,kBAAC,IAAD,CAAOK,KAAK,SAASC,OAAK,EAACC,QAAM,EAACC,OAAQP,IAC1C,kBAAC,IAAD,CAAOI,KAAK,SAASC,OAAK,EAACC,QAAM,EAACC,OAAQN,IAC1C,kBAAC,IAAD,CAAOG,KAAK,WAAWC,OAAK,EAACC,QAAM,EAACC,OAAQL,IAC5C,yBAAKd,UAAU,UACd,kBAAC,IAAD,CAAUA,UAAU,WAAWoB,GAAG,iBAAkBH,OAAK,EAACI,YAAa,CAACC,MAAM,WAA9E,QACD,kBAAC,IAAD,CAAStB,UAAU,WAAYoB,GAAG,SAASH,OAAK,EAACI,YAAa,CAACC,MAAM,WAArE,SACC,kBAAC,IAAD,CAAStB,UAAU,WAAYoB,GAAG,SAASH,OAAK,EAACI,YAAa,CAACC,MAAM,WAArE,UACD,kBAAC,IAAD,CAAStB,UAAU,WAAYoB,GAAG,WAAWH,OAAK,EAACI,YAAa,CAACC,MAAM,WAAvE,eAGK,yBAAKtB,UAAU,QACf,yBAAKA,UAAU,aAAf,mBACkB,6BAChB,yBAAKC,IAAI,6DAA6DE,IAAI,OAC1E,yBAAKF,IAAI,yDAAyDE,IAAI,OACtE,yBAAKF,IAAI,8DAA8DE,IAAI,e,GAvBhEG,IAAMC,WA+BTQ,YAMfQ,IAASJ,OAAO,kBAAC,EAAD,MAASK,SAASC,eAAe,SL2E3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.1ecbd387.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Tiny cute children learning coding.c83ae83b.png\";","module.exports = __webpack_public_path__ + \"static/media/ex-header-background.d740b842.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.b41ed9a7.png\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './home.css';\r\n\r\nimport logo from './Tiny cute children learning coding.png';\r\nimport svg  from './ex-header-background.jpg';\r\nimport image2 from './logo.png';\r\nclass Home extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"home\">\r\n                <div className=\"logo\">\r\n                    <img src={logo} alt=\"my svg\"  /></div>\r\n<div className=\"svg-part\"> \r\n\r\n<img src={svg} alt=\"my svg\"  />\r\n\r\n\r\n\r\n</div>\r\n<div className=\"maincontent\"></div>\r\n  <div className=\"container3\">\r\n                    <div className=\"box11\">\r\n                        <img src={image2} alt=\"run\"/></div>\r\n                    <div className=\"box22\">\r\n                        <p>\r\n                           CODE FLOW !!\r\n                           <br/>learning must go on\r\n                            </p>\r\n                         <div className=\"circle\"></div>   \r\n                    </div>\r\n             \r\n            </div>\r\n            \r\n            </div>\r\n    \r\n    \r\n    \r\n        \r\n        );\r\n    }\r\n}\r\n\r\nexport default Home","import React from 'react';\r\nimport './we-do.css';\r\n\r\nclass Wedo extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"we-do\"> This is about us Component  </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Wedo","import React from 'react';\r\nimport './events.css';\r\n\r\nclass Events extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"we-do\"> our events Component </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Events","import React from 'react';\r\nimport './contact.css';\r\n\r\nclass Contact extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"we-do\">contact me component  </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter as Router,NavLink} from 'react-router-dom';\r\nimport Route from 'react-router-dom/Route';\r\nimport Home from './component/home/home';\r\nimport Wedo from './component/we-do/we-do';\r\nimport Events from \"./component/our-events/events\";\r\nimport Contact from './component/contact us/contact';\r\n\r\n\r\nconst Homepage=()=>{return( <div><Home/></div>);}\r\nconst Work=()=>{return( <h1><Wedo/></h1>);}\r\nconst Event=()=>{return( <h1><Events/></h1>);}\r\nconst contacts=()=>{return( <h1><Contact/></h1>);}\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n  render(){\r\n  return (\r\n\r\n    <Router>\r\n<div className=\"App\"> \r\n\r\n<Route path=\"/shiksha-work/\" exact strict render={Homepage}/>\r\n<Route path=\"/about\" exact strict render={Work}/>\r\n<Route path=\"/event\" exact strict render={Event}/>  \r\n<Route path=\"/contact\" exact strict render={contacts}/>  \r\n<div className=\"navbar\">\r\n <NavLink  className=\"nav-item\" to=\"/shiksha-work/\"  exact activeStyle={{color:'orange'}}>Home</NavLink>\r\n<NavLink className=\"nav-item\"  to=\"/about\" exact activeStyle={{color:'orange'}}>About</NavLink>\r\n <NavLink className=\"nav-item\"  to=\"/event\" exact activeStyle={{color:'orange'}}>Events</NavLink>\r\n<NavLink className=\"nav-item\"  to=\"/contact\" exact activeStyle={{color:'orange'}}>Contact US</NavLink></div>\r\n\r\n   \r\n     <div className=\"foot\">\r\n     <div className=\"container\">\r\n       Copyright @ 2019<br/>\r\n       <img src=\"https://img.icons8.com/material/24/000000/facebook--v1.png\" alt=\"hi\"></img>\r\n       <img src=\"https://img.icons8.com/material/24/000000/snapchat.png\" alt=\"hi\"></img>\r\n       <img src=\"https://img.icons8.com/material/24/000000/pinterest--v1.png\" alt=\"hi\"></img>\r\n     </div>\r\n    </div></div>\r\n    </Router>\r\n  \r\n  );}\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nserviceWorker.unregister();"],"sourceRoot":""}